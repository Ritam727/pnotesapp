<!DOCTYPE html>
<html>
  <head>
    <!-- Meta tags and title -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Pnotes</title>

    <link rel="icon" href="article-24px.svg" type="image/svg+xml">
    <link rel="shortcut icon" href="article-24px.svg" type="image/svg+xml">

    <!-- Firebase Scripts, currently using app, auth and database for right now! -->
    <!-- update the version number as needed -->
    <script defer src="/__/firebase/7.14.4/firebase-app.js"></script>
    <!-- include only the Firebase features as you need -->
    <script defer src="/__/firebase/7.14.4/firebase-auth.js"></script>
    <script defer src="/__/firebase/7.14.4/firebase-database.js"></script>
    <!-- <script defer src="/__/firebase/7.14.4/firebase-messaging.js"></script> -->
    <!-- <script defer src="/__/firebase/7.14.4/firebase-storage.js"></script> -->
    <!-- initialize the SDK after all desired features are loaded -->
    <script defer src="/__/firebase/init.js"></script>
    <script src="https://cdn.jsdelivr.net/remarkable/1.7.1/remarkable.min.js"></script>

    <!-- Stylesheets -->
    <link rel="stylesheet" href="/css/desktop-style.css">

    <!-- Latest compiled and minified CSS -->
    <!-- <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous"> -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
  
    <!-- <link href = "https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel = "stylesheet"> -->
    <script src = "https://code.jquery.com/jquery-1.10.2.js"></script>
    <script src = "https://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>
  </head>
  <body>

    <script>
      document.addEventListener('DOMContentLoaded', function () {
        
        window.signInEmail = '<%= userEmail %>';
        const signInUserEmail = '<%= userEmail %>';
        window.currentNote = '';

        console.log(signInUserEmail);

        // Now call the data extract for only once so as to get the list of datas
        firebase.database().ref(signInUserEmail).orderByChild('timestamp').on('value', function (snapshot) {

          //console.log(snapshot);
          var descNoteList = [];

          snapshot.forEach(function (childSnapshot) {
            var childKey = childSnapshot.key;
            var childData = childSnapshot.val();
            //console.log("childkey", childKey);
            //console.log("childData", childData);
            // ...
            descNoteList.push({ childKey: childKey, childData: childData });

          });

          // Reverse the array
          descNoteList.reverse();

          // Empty the notes data
          window.notesData = {};

          var noteFamily = document.getElementById('note-family');
          noteFamily.innerHTML = '';

          descNoteList.forEach(function (childSnapshot) {
            var childKey = childSnapshot.childKey;
            var childData = childSnapshot.childData;

            noteFamily.innerHTML += '<div id="' + childKey + '" class="note-row hoverable" onclick=addToDescriptionWindow(this) >'
              + '<div class="note-title">' + childData.title + '</div>'
              + '<div class="note-date">' + childData.date + '</div>'
              + '</div>';

            // Only storing notes description in it
            window.notesData[childKey] = { description: childData.description, title: childData.title };
          });

          // noteFamily.innerHTML = noteFamilyString;
        });

        //list(family);

        // Here the firebase is correctly defined purely!
        //console.log(firebase.database.ServerValue.TIMESTAMP);

        addNotefunction = (title, description) => {
            //Start the add note function
            console.log("Add Note");

            var options = { month: 'short', day: 'numeric' };
            var today = new Date();
            // console.log(today.toLocaleDateString("en-US", options));

            var newNote = {
                title: title,
                description: description,
                date: today.toLocaleDateString("en-US", options),
                timestamp: firebase.database.ServerValue.TIMESTAMP
            }

            // Get a key for a new Post.
            var newPostKey = firebase.database().ref(signInUserEmail).push().key;

            // Write the new post's data simultaneously in the posts list and the user's post list.
            var updates = {};
            updates[newPostKey] = newNote;

            return firebase.database().ref(signInUserEmail).update(updates);
        }

        updateNotefunction = (noteId, title, description) => {

            //Start the update note function
            console.log("Update Note");

            var options = { month: 'short', day: 'numeric' };
            var today = new Date();
            // console.log(today.toLocaleDateString("en-US", options));

            var newNote = {
                title: title,
                description: description,
                date: today.toLocaleDateString("en-US", options),
                timestamp: firebase.database.ServerValue.TIMESTAMP
            }

            // Write the new post's data simultaneously in the posts list and the user's post list.
            var updates = {};
            updates[noteId] = newNote;

            return firebase.database().ref(signInUserEmail).update(updates);
        }

        deleteNotefunction = (noteId) => {
            return firebase.database().ref(signInUserEmail).child(noteId).remove();
        }
      });

    </script>

    <!-- Sign Out Function -->
    <script>
      // Sign out Function
      signOutFromGoogle = () => {
            //Start the user delete or sign out activity
            console.log("Sign Out User!");

            var user = firebase.auth().signOut();

            var xhttp = new XMLHttpRequest();

            xhttp.addEventListener("error", function (evt) {
                console.log("Failed");
                console.log(evt.toString());
            });

            xhttp.addEventListener("load", function (evt) {
                console.log("Sign Out Success!");
                location.reload();
            });

            // Defining parameters 
            xhttp.open("POST", "/clear", true);
            //Send the proper header information along with the request
            xhttp.setRequestHeader("Content-Type", "application/json"); // Necessary for POST
            xhttp.send();
      }
    </script>

    <div id="main">
      <div id="top-nav">
        <div id="logo-header"><img src="pnotes-logo3.png"></img></div>
        <button class="btn" id="create-note-button">Add Note</button>
        <div class="right-menu">
          <div id="user-email-heading">Welcome <%= userEmail %></div>
          <button class="btn btn-danger" id="sign-out-button" onclick=signOutFromGoogle()>Sign Out</button>
        </div>
      </div>

      <!-- Main content contains the title and description -->
      <div id="main-content">
        <div id="sidebar">
          <div id="search-notes-box-container">
            <div id="search-notes-box">
              <span class="search-icon"><i class="fa fa-search"></i></span>
              <div class="search-input-container"><input id="search-input" placeholder="Search Notes" value=""></div>
            </div>
          </div>
          <hr>
          <div id="note-family"></div>
        </div>
        <div id="note-description-content"></div>
      </div>
    </div>

    <!-- Script to add the data of the currentNote to desccription on button click -->
    <script>
      function addToDescriptionWindow(noteRow){

        var md = new Remarkable();
        // console.log(md.render('# Remarkable rulezz!'));

        // First deselect the current selected Note
        console.log(window.currentNote);
        if(window.currentNote) {
          document.getElementById(window.currentNote).classList.remove('is--active');
          document.getElementById(window.currentNote).classList.remove('hoverable');
        }

        // console.log(noteRow);
        // console.log(noteRow.id);

        descriptionWindowString = window.notesData[noteRow.id].description;
        // console.log(descriptionWindowString);

        // Now add the description
        var descriptionWindow = document.getElementById('note-description-content');
        descriptionWindow.innerHTML = md.render(descriptionWindowString);

        // now change all a tags to have target="_none" in note-description-content
        var anchors = descriptionWindow.getElementsByTagName('a');
        for (var i=0; i < anchors.length; i++){
          anchors[i].setAttribute('target', '_blank');
        }
        
        // Select the note
        window.currentNote = noteRow.id;
        noteRow.classList.add("is--active");
        noteRow.classList.remove("hoverable");
      }
    </script>

    <!-- JQuery for resize -->
    <script src="js/before-body-jquery.js"></script>
  </body>
</html>
