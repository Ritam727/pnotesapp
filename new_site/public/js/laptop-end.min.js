function doOnNoteClick(e){if(saveForUnSavedChanges(),window.currentNote)try{document.getElementById(window.currentNote).classList.remove("is--active"),document.getElementById(window.currentNote).classList.add("hoverable")}catch(e){console.log("Error currentNote invalid!",e.toString())}window.currentNote=e.id,e.classList.add("is--active"),e.classList.remove("hoverable"),document.getElementById("remove-note-button").classList.remove("hidden"),document.getElementById("edit-title-button").classList.remove("hidden"),document.getElementById("tab-nav").classList.remove("hidden"),document.getElementById("search-input").value="",ForSearchingNote(),window.editor.id=e.id,window.editor.title=window.notesData[e.id].title,window.editor.description=window.notesData[e.id].description,makePreviewTabActive()}function makeEditTabActive(){var e=document.getElementById("note-description-editor");e.innerHTML=window.editor.description,e.value=window.editor.description,document.getElementById("editing-button").classList.add("tab-active"),document.getElementById("preview-button").classList.remove("tab-active"),document.getElementById("note-description-content").classList.add("hidden"),document.getElementById("note-description-preview").classList.remove("hidden"),$("#note-description-editor").focus()}function makePreviewTabActive(){var e=document.getElementById("note-description-content");e.innerHTML=md.render(window.editor.description);for(var t=e.getElementsByTagName("a"),n=0;n<t.length;n++)t[n].setAttribute("target","_blank"),t[n].setAttribute("rel","noopener");e.querySelectorAll("pre code").forEach(e=>{hljs.highlightBlock(e)}),document.getElementById("preview-button").classList.add("tab-active"),document.getElementById("editing-button").classList.remove("tab-active"),document.getElementById("note-description-preview").classList.add("hidden"),document.getElementById("note-description-content").classList.remove("hidden")}function changeWindowEditorDescription(e){console.log("Text Area changed!"),window.editor.description=e.value}function newNoteWindow(){saveForUnSavedChanges();addNotefunction("New Note Title","# New Note");console.log("Check Now if new note is created!"),console.log("Now open the new note editor"),window.editor={id:window.currentNote,title:window.notesData[currentNote].title,description:window.notesData[currentNote].description},document.getElementById("tab-nav").classList.remove("hidden"),makeEditTabActive(),document.getElementById("remove-note-button").classList.remove("hidden"),document.getElementById("edit-title-button").classList.remove("hidden"),makeEditTitleBoxVisible()}function restoreState(){window.editor.description=window.notesData[window.currentNote].description,makePreviewTabActive()}function saveNote(){updateNotefunction(window.editor.id,window.editor.title,window.editor.description);restoreState()}function openDeleteNoteModal(){var e=document.getElementById("delete-modal");e.classList.remove("hidden"),e.getElementsByClassName("close")[0].onclick=function(){e.classList.add("hidden")},e.getElementsByClassName("cancel")[0].onclick=function(){e.classList.add("hidden")},confirmDelete=e.getElementsByClassName("confirm-delete")[0],confirmDelete.onclick=function(){deleteCurrentNote(),e.classList.add("hidden")},document.getElementById("modal-message-p").innerHTML="Are you sure you want to delete "+window.editor.title+"?"}function deleteCurrentNote(){deleteNotefunction(window.currentNote);document.getElementById("note-description-content").innerHTML="",document.getElementById("note-description-editor").innerHTML="",document.getElementById("note-description-editor").value="",document.getElementById("remove-note-button").classList.add("hidden"),document.getElementById("edit-note-title-box").classList.add("hidden"),document.getElementById("edit-title-button").classList.add("hidden"),document.getElementById("tab-nav").classList.add("hidden"),window.currentNote=""}function makeEditTitleBoxVisible(){function e(){var e=document.getElementById("edit-note-title-input").value;""===e.toString().trim()?alert("Note Title Cannot be empty!"):(updateNotefunction(window.currentNote,e,window.notesData[window.currentNote].description),window.editor.title=e,editNoteTitleBox.classList.add("hidden"))}editNoteTitleBox=document.getElementById("edit-note-title-box"),editNoteTitleBox.classList.remove("hidden"),editNoteTitleBox.getElementsByTagName("input")[0].value=window.editor.title,editNoteTitleBox.getElementsByClassName("cancel")[0].onclick=function(){editNoteTitleBox.classList.add("hidden")},editNoteTitleBox.getElementsByClassName("save")[0].addEventListener("click",e),editNoteTitleBox.addEventListener("keypress",t=>{13===t.keyCode&&e()}),$("#edit-note-title-input").focus()}function saveForUnSavedChanges(){if(window.currentNote&&""!==window.currentNote&&window.notesData[currentNote].description!==window.editor.description)updateNotefunction(window.editor.id,window.editor.title,window.editor.description)}document.addEventListener("DOMContentLoaded",function(){window.signInEmail=cuserEmail;const e=cuserEmail;window.currentNote="",window.editor={id:"",title:"",description:""},console.log("Email using:",e),firebase.database().ref(e).orderByChild("timestamp").on("value",function(e){var t=[];e.forEach(function(e){var n=e.key,o=e.val();t.push({childKey:n,childData:o})}),t.reverse(),window.notesData={};var n=document.getElementById("note-family");if(n.innerHTML="",noteFamilyString="",t.forEach(function(e){var t=e.childKey,n=e.childData;noteFamilyString+='<div id="'+t+'" class="note-row hoverable" onclick=doOnNoteClick(this) ><div class="note-title">'+n.title+'</div><div class="note-date">'+n.date+"</div></div>",window.notesData[t]={description:n.description,title:n.title}}),n.innerHTML=noteFamilyString,window.currentNote)try{document.getElementById(window.currentNote).classList.add("is--active"),document.getElementById(window.currentNote).classList.remove("hoverable")}catch(e){console.log("Ignore this error, comes at time of delete",e.toString)}}),addNotefunction=((t,n)=>{console.log("Add Note");var o={title:t,description:n,date:(new Date).toLocaleDateString("en-US",{month:"short",day:"numeric"}),timestamp:firebase.database.ServerValue.TIMESTAMP},i=firebase.database().ref(e).push().key;console.log(i),window.currentNote=i;var d={};return d[i]=o,firebase.database().ref(e).update(d)}),updateNotefunction=((t,n,o)=>{console.log("Update Note");var i={title:n,description:o,date:(new Date).toLocaleDateString("en-US",{month:"short",day:"numeric"}),timestamp:firebase.database.ServerValue.TIMESTAMP},d={};return d[t]=i,firebase.database().ref(e).update(d)}),deleteNotefunction=(t=>firebase.database().ref(e).child(t).remove())}),window.onbeforeunload=function(e){if(window.notesData[window.currentNote].description!==window.editor.description)return"you have unsaved changes. Are you sure you want to navigate away?"},HTMLTextAreaElement.prototype.getCaretPosition=function(){return this.selectionStart},HTMLTextAreaElement.prototype.setCaretPosition=function(e){this.selectionStart=e,this.selectionEnd=e,this.focus()};var textarea=document.getElementById("note-description-editor");textarea.onkeydown=function(e){var t;if(9==e.keyCode)return t=textarea.getCaretPosition()+"    ".length,textarea.value=textarea.value.substring(0,textarea.getCaretPosition())+"    "+textarea.value.substring(textarea.getCaretPosition(),textarea.value.length),textarea.setCaretPosition(t),!1};const noteFamily=document.getElementById("note-family").childNodes,ForSearchingNote=()=>{const e=document.getElementById("search-input");for(let t=0;t<noteFamily.length;t++)noteFamily[t].childNodes[0].textContent.toLowerCase().includes(e.value.toLowerCase())?noteFamily[t].classList.value.includes("hidden")&&noteFamily[t].classList.remove("hidden"):noteFamily[t].classList.add("hidden")};function getCookie(e){for(var t=e+"=",n=decodeURIComponent(document.cookie).split(";"),o=0;o<n.length;o++){for(var i=n[o];" "==i.charAt(0);)i=i.substring(1);if(0==i.indexOf(t))return i.substring(t.length,i.length)}return""}$(function(){$("#sidebar").resizable(),$("#preview-button").click(function(){makePreviewTabActive()}),$("#editing-button").click(function(){makeEditTabActive()}),$("#dark-switcher").click(function(){var e;$("body").hasClass("dark")?(console.log("Already in Dark mode, switching to light"),$("#logo-header").html('<img src="pnotes-logo3.png"></img>'),$("body").removeClass("dark"),$("#dark-switcher").html("Switch to Dark Mode"),(e=new XMLHttpRequest).addEventListener("load",function(e){1==JSON.parse(e.srcElement.response).success?console.log("Theme change success!"):console.log("Theme Change Failed")}),e.open("POST","/theme/set/light",!0),e.setRequestHeader("Content-Type","application/json"),e.send(JSON.stringify({userEmail:"priyam"}))):($("#logo-header").html('<img src="pnotes-logo-dark.png"></img>'),$("body").addClass("dark"),$("#dark-switcher").html("Switch to Light Mode"),(e=new XMLHttpRequest).addEventListener("load",function(e){1==JSON.parse(e.srcElement.response).success?console.log("Theme change success!"):console.log("Theme Change Failed")}),e.open("POST","/theme/set/dark",!0),e.setRequestHeader("Content-Type","application/json"),e.send(JSON.stringify({userEmail:"priyam"})))}),$(window).bind("keydown",function(e){if(e.ctrlKey||e.metaKey)switch(String.fromCharCode(e.which).toLowerCase()){case"s":e.preventDefault(),window.currentNote&&(console.log("Saving Note"),saveNote())}})}),signOutFromGoogle=(()=>{saveForUnSavedChanges(),console.log("Sign Out User!");firebase.auth().signOut();var e=new XMLHttpRequest;e.addEventListener("error",function(e){console.log("Failed"),console.log(e.toString())}),e.addEventListener("load",function(e){console.log("Sign Out Success!"),location.reload()}),e.open("POST","/clear",!0),e.setRequestHeader("Content-Type","application/json"),e.send()}),signInToGoogle=(()=>{console.log("Sign In to Google!");var e=new firebase.auth.GoogleAuthProvider;firebase.auth().signInWithPopup(e).then(function(e){console.log("success, check now!"),console.log(e.user);var t=new XMLHttpRequest;t.addEventListener("error",function(e){console.log("Failed"),console.log(e.toString())}),t.addEventListener("load",function(e){1==JSON.parse(e.srcElement.response).success?console.log("Sign In Success!"):console.log("Failed to sign In"),location.reload()}),t.open("POST","/set",!0),t.setRequestHeader("Content-Type","application/json"),t.send(JSON.stringify({userEmail:e.user.email,userDisplayName:e.user.displayName}))}).catch(function(e){console.log(e),console.log("Failed to do")})});
